/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discord

import (
	"encoding/json"
	"fmt"
)

// CreateInteractionResponseRequest struct for CreateInteractionResponseRequest
type CreateInteractionResponseRequest struct {
	ApplicationCommandAutocompleteCallbackRequest *ApplicationCommandAutocompleteCallbackRequest
	CreateMessageInteractionCallbackRequest *CreateMessageInteractionCallbackRequest
	ModalInteractionCallbackRequest *ModalInteractionCallbackRequest
	PongInteractionCallbackRequest *PongInteractionCallbackRequest
	UpdateMessageInteractionCallbackRequest *UpdateMessageInteractionCallbackRequest
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *CreateInteractionResponseRequest) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into ApplicationCommandAutocompleteCallbackRequest
	err = json.Unmarshal(data, &dst.ApplicationCommandAutocompleteCallbackRequest);
	if err == nil {
		jsonApplicationCommandAutocompleteCallbackRequest, _ := json.Marshal(dst.ApplicationCommandAutocompleteCallbackRequest)
		if string(jsonApplicationCommandAutocompleteCallbackRequest) == "{}" { // empty struct
			dst.ApplicationCommandAutocompleteCallbackRequest = nil
		} else {
			return nil // data stored in dst.ApplicationCommandAutocompleteCallbackRequest, return on the first match
		}
	} else {
		dst.ApplicationCommandAutocompleteCallbackRequest = nil
	}

	// try to unmarshal JSON data into CreateMessageInteractionCallbackRequest
	err = json.Unmarshal(data, &dst.CreateMessageInteractionCallbackRequest);
	if err == nil {
		jsonCreateMessageInteractionCallbackRequest, _ := json.Marshal(dst.CreateMessageInteractionCallbackRequest)
		if string(jsonCreateMessageInteractionCallbackRequest) == "{}" { // empty struct
			dst.CreateMessageInteractionCallbackRequest = nil
		} else {
			return nil // data stored in dst.CreateMessageInteractionCallbackRequest, return on the first match
		}
	} else {
		dst.CreateMessageInteractionCallbackRequest = nil
	}

	// try to unmarshal JSON data into ModalInteractionCallbackRequest
	err = json.Unmarshal(data, &dst.ModalInteractionCallbackRequest);
	if err == nil {
		jsonModalInteractionCallbackRequest, _ := json.Marshal(dst.ModalInteractionCallbackRequest)
		if string(jsonModalInteractionCallbackRequest) == "{}" { // empty struct
			dst.ModalInteractionCallbackRequest = nil
		} else {
			return nil // data stored in dst.ModalInteractionCallbackRequest, return on the first match
		}
	} else {
		dst.ModalInteractionCallbackRequest = nil
	}

	// try to unmarshal JSON data into PongInteractionCallbackRequest
	err = json.Unmarshal(data, &dst.PongInteractionCallbackRequest);
	if err == nil {
		jsonPongInteractionCallbackRequest, _ := json.Marshal(dst.PongInteractionCallbackRequest)
		if string(jsonPongInteractionCallbackRequest) == "{}" { // empty struct
			dst.PongInteractionCallbackRequest = nil
		} else {
			return nil // data stored in dst.PongInteractionCallbackRequest, return on the first match
		}
	} else {
		dst.PongInteractionCallbackRequest = nil
	}

	// try to unmarshal JSON data into UpdateMessageInteractionCallbackRequest
	err = json.Unmarshal(data, &dst.UpdateMessageInteractionCallbackRequest);
	if err == nil {
		jsonUpdateMessageInteractionCallbackRequest, _ := json.Marshal(dst.UpdateMessageInteractionCallbackRequest)
		if string(jsonUpdateMessageInteractionCallbackRequest) == "{}" { // empty struct
			dst.UpdateMessageInteractionCallbackRequest = nil
		} else {
			return nil // data stored in dst.UpdateMessageInteractionCallbackRequest, return on the first match
		}
	} else {
		dst.UpdateMessageInteractionCallbackRequest = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(CreateInteractionResponseRequest)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *CreateInteractionResponseRequest) MarshalJSON() ([]byte, error) {
	if src.ApplicationCommandAutocompleteCallbackRequest != nil {
		return json.Marshal(&src.ApplicationCommandAutocompleteCallbackRequest)
	}

	if src.CreateMessageInteractionCallbackRequest != nil {
		return json.Marshal(&src.CreateMessageInteractionCallbackRequest)
	}

	if src.ModalInteractionCallbackRequest != nil {
		return json.Marshal(&src.ModalInteractionCallbackRequest)
	}

	if src.PongInteractionCallbackRequest != nil {
		return json.Marshal(&src.PongInteractionCallbackRequest)
	}

	if src.UpdateMessageInteractionCallbackRequest != nil {
		return json.Marshal(&src.UpdateMessageInteractionCallbackRequest)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableCreateInteractionResponseRequest struct {
	value *CreateInteractionResponseRequest
	isSet bool
}

func (v NullableCreateInteractionResponseRequest) Get() *CreateInteractionResponseRequest {
	return v.value
}

func (v *NullableCreateInteractionResponseRequest) Set(val *CreateInteractionResponseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInteractionResponseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInteractionResponseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInteractionResponseRequest(val *CreateInteractionResponseRequest) *NullableCreateInteractionResponseRequest {
	return &NullableCreateInteractionResponseRequest{value: val, isSet: true}
}

func (v NullableCreateInteractionResponseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInteractionResponseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


