/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateApplicationUserRoleConnectionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateApplicationUserRoleConnectionRequest{}

// UpdateApplicationUserRoleConnectionRequest struct for UpdateApplicationUserRoleConnectionRequest
type UpdateApplicationUserRoleConnectionRequest struct {
	PlatformName NullableString `json:"platform_name,omitempty"`
	PlatformUsername NullableString `json:"platform_username,omitempty"`
	Metadata map[string]string `json:"metadata,omitempty"`
}

// NewUpdateApplicationUserRoleConnectionRequest instantiates a new UpdateApplicationUserRoleConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateApplicationUserRoleConnectionRequest() *UpdateApplicationUserRoleConnectionRequest {
	this := UpdateApplicationUserRoleConnectionRequest{}
	return &this
}

// NewUpdateApplicationUserRoleConnectionRequestWithDefaults instantiates a new UpdateApplicationUserRoleConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateApplicationUserRoleConnectionRequestWithDefaults() *UpdateApplicationUserRoleConnectionRequest {
	this := UpdateApplicationUserRoleConnectionRequest{}
	return &this
}

// GetPlatformName returns the PlatformName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateApplicationUserRoleConnectionRequest) GetPlatformName() string {
	if o == nil || IsNil(o.PlatformName.Get()) {
		var ret string
		return ret
	}
	return *o.PlatformName.Get()
}

// GetPlatformNameOk returns a tuple with the PlatformName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateApplicationUserRoleConnectionRequest) GetPlatformNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlatformName.Get(), o.PlatformName.IsSet()
}

// HasPlatformName returns a boolean if a field has been set.
func (o *UpdateApplicationUserRoleConnectionRequest) HasPlatformName() bool {
	if o != nil && o.PlatformName.IsSet() {
		return true
	}

	return false
}

// SetPlatformName gets a reference to the given NullableString and assigns it to the PlatformName field.
func (o *UpdateApplicationUserRoleConnectionRequest) SetPlatformName(v string) {
	o.PlatformName.Set(&v)
}
// SetPlatformNameNil sets the value for PlatformName to be an explicit nil
func (o *UpdateApplicationUserRoleConnectionRequest) SetPlatformNameNil() {
	o.PlatformName.Set(nil)
}

// UnsetPlatformName ensures that no value is present for PlatformName, not even an explicit nil
func (o *UpdateApplicationUserRoleConnectionRequest) UnsetPlatformName() {
	o.PlatformName.Unset()
}

// GetPlatformUsername returns the PlatformUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateApplicationUserRoleConnectionRequest) GetPlatformUsername() string {
	if o == nil || IsNil(o.PlatformUsername.Get()) {
		var ret string
		return ret
	}
	return *o.PlatformUsername.Get()
}

// GetPlatformUsernameOk returns a tuple with the PlatformUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateApplicationUserRoleConnectionRequest) GetPlatformUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlatformUsername.Get(), o.PlatformUsername.IsSet()
}

// HasPlatformUsername returns a boolean if a field has been set.
func (o *UpdateApplicationUserRoleConnectionRequest) HasPlatformUsername() bool {
	if o != nil && o.PlatformUsername.IsSet() {
		return true
	}

	return false
}

// SetPlatformUsername gets a reference to the given NullableString and assigns it to the PlatformUsername field.
func (o *UpdateApplicationUserRoleConnectionRequest) SetPlatformUsername(v string) {
	o.PlatformUsername.Set(&v)
}
// SetPlatformUsernameNil sets the value for PlatformUsername to be an explicit nil
func (o *UpdateApplicationUserRoleConnectionRequest) SetPlatformUsernameNil() {
	o.PlatformUsername.Set(nil)
}

// UnsetPlatformUsername ensures that no value is present for PlatformUsername, not even an explicit nil
func (o *UpdateApplicationUserRoleConnectionRequest) UnsetPlatformUsername() {
	o.PlatformUsername.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateApplicationUserRoleConnectionRequest) GetMetadata() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateApplicationUserRoleConnectionRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *UpdateApplicationUserRoleConnectionRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *UpdateApplicationUserRoleConnectionRequest) SetMetadata(v map[string]string) {
	o.Metadata = v
}

func (o UpdateApplicationUserRoleConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateApplicationUserRoleConnectionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.PlatformName.IsSet() {
		toSerialize["platform_name"] = o.PlatformName.Get()
	}
	if o.PlatformUsername.IsSet() {
		toSerialize["platform_username"] = o.PlatformUsername.Get()
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableUpdateApplicationUserRoleConnectionRequest struct {
	value *UpdateApplicationUserRoleConnectionRequest
	isSet bool
}

func (v NullableUpdateApplicationUserRoleConnectionRequest) Get() *UpdateApplicationUserRoleConnectionRequest {
	return v.value
}

func (v *NullableUpdateApplicationUserRoleConnectionRequest) Set(val *UpdateApplicationUserRoleConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateApplicationUserRoleConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateApplicationUserRoleConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateApplicationUserRoleConnectionRequest(val *UpdateApplicationUserRoleConnectionRequest) *NullableUpdateApplicationUserRoleConnectionRequest {
	return &NullableUpdateApplicationUserRoleConnectionRequest{value: val, isSet: true}
}

func (v NullableUpdateApplicationUserRoleConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateApplicationUserRoleConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


