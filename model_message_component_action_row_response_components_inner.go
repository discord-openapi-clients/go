/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discord

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// MessageComponentActionRowResponseComponentsInner - struct for MessageComponentActionRowResponseComponentsInner
type MessageComponentActionRowResponseComponentsInner struct {
	MessageComponentButtonResponse *MessageComponentButtonResponse
	MessageComponentChannelSelectResponse *MessageComponentChannelSelectResponse
	MessageComponentInputTextResponse *MessageComponentInputTextResponse
	MessageComponentMentionableSelectResponse *MessageComponentMentionableSelectResponse
	MessageComponentRoleSelectResponse *MessageComponentRoleSelectResponse
	MessageComponentStringSelectResponse *MessageComponentStringSelectResponse
	MessageComponentUserSelectResponse *MessageComponentUserSelectResponse
}

// MessageComponentButtonResponseAsMessageComponentActionRowResponseComponentsInner is a convenience function that returns MessageComponentButtonResponse wrapped in MessageComponentActionRowResponseComponentsInner
func MessageComponentButtonResponseAsMessageComponentActionRowResponseComponentsInner(v *MessageComponentButtonResponse) MessageComponentActionRowResponseComponentsInner {
	return MessageComponentActionRowResponseComponentsInner{
		MessageComponentButtonResponse: v,
	}
}

// MessageComponentChannelSelectResponseAsMessageComponentActionRowResponseComponentsInner is a convenience function that returns MessageComponentChannelSelectResponse wrapped in MessageComponentActionRowResponseComponentsInner
func MessageComponentChannelSelectResponseAsMessageComponentActionRowResponseComponentsInner(v *MessageComponentChannelSelectResponse) MessageComponentActionRowResponseComponentsInner {
	return MessageComponentActionRowResponseComponentsInner{
		MessageComponentChannelSelectResponse: v,
	}
}

// MessageComponentInputTextResponseAsMessageComponentActionRowResponseComponentsInner is a convenience function that returns MessageComponentInputTextResponse wrapped in MessageComponentActionRowResponseComponentsInner
func MessageComponentInputTextResponseAsMessageComponentActionRowResponseComponentsInner(v *MessageComponentInputTextResponse) MessageComponentActionRowResponseComponentsInner {
	return MessageComponentActionRowResponseComponentsInner{
		MessageComponentInputTextResponse: v,
	}
}

// MessageComponentMentionableSelectResponseAsMessageComponentActionRowResponseComponentsInner is a convenience function that returns MessageComponentMentionableSelectResponse wrapped in MessageComponentActionRowResponseComponentsInner
func MessageComponentMentionableSelectResponseAsMessageComponentActionRowResponseComponentsInner(v *MessageComponentMentionableSelectResponse) MessageComponentActionRowResponseComponentsInner {
	return MessageComponentActionRowResponseComponentsInner{
		MessageComponentMentionableSelectResponse: v,
	}
}

// MessageComponentRoleSelectResponseAsMessageComponentActionRowResponseComponentsInner is a convenience function that returns MessageComponentRoleSelectResponse wrapped in MessageComponentActionRowResponseComponentsInner
func MessageComponentRoleSelectResponseAsMessageComponentActionRowResponseComponentsInner(v *MessageComponentRoleSelectResponse) MessageComponentActionRowResponseComponentsInner {
	return MessageComponentActionRowResponseComponentsInner{
		MessageComponentRoleSelectResponse: v,
	}
}

// MessageComponentStringSelectResponseAsMessageComponentActionRowResponseComponentsInner is a convenience function that returns MessageComponentStringSelectResponse wrapped in MessageComponentActionRowResponseComponentsInner
func MessageComponentStringSelectResponseAsMessageComponentActionRowResponseComponentsInner(v *MessageComponentStringSelectResponse) MessageComponentActionRowResponseComponentsInner {
	return MessageComponentActionRowResponseComponentsInner{
		MessageComponentStringSelectResponse: v,
	}
}

// MessageComponentUserSelectResponseAsMessageComponentActionRowResponseComponentsInner is a convenience function that returns MessageComponentUserSelectResponse wrapped in MessageComponentActionRowResponseComponentsInner
func MessageComponentUserSelectResponseAsMessageComponentActionRowResponseComponentsInner(v *MessageComponentUserSelectResponse) MessageComponentActionRowResponseComponentsInner {
	return MessageComponentActionRowResponseComponentsInner{
		MessageComponentUserSelectResponse: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *MessageComponentActionRowResponseComponentsInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into MessageComponentButtonResponse
	err = newStrictDecoder(data).Decode(&dst.MessageComponentButtonResponse)
	if err == nil {
		jsonMessageComponentButtonResponse, _ := json.Marshal(dst.MessageComponentButtonResponse)
		if string(jsonMessageComponentButtonResponse) == "{}" { // empty struct
			dst.MessageComponentButtonResponse = nil
		} else {
			if err = validator.Validate(dst.MessageComponentButtonResponse); err != nil {
				dst.MessageComponentButtonResponse = nil
			} else {
				match++
			}
		}
	} else {
		dst.MessageComponentButtonResponse = nil
	}

	// try to unmarshal data into MessageComponentChannelSelectResponse
	err = newStrictDecoder(data).Decode(&dst.MessageComponentChannelSelectResponse)
	if err == nil {
		jsonMessageComponentChannelSelectResponse, _ := json.Marshal(dst.MessageComponentChannelSelectResponse)
		if string(jsonMessageComponentChannelSelectResponse) == "{}" { // empty struct
			dst.MessageComponentChannelSelectResponse = nil
		} else {
			if err = validator.Validate(dst.MessageComponentChannelSelectResponse); err != nil {
				dst.MessageComponentChannelSelectResponse = nil
			} else {
				match++
			}
		}
	} else {
		dst.MessageComponentChannelSelectResponse = nil
	}

	// try to unmarshal data into MessageComponentInputTextResponse
	err = newStrictDecoder(data).Decode(&dst.MessageComponentInputTextResponse)
	if err == nil {
		jsonMessageComponentInputTextResponse, _ := json.Marshal(dst.MessageComponentInputTextResponse)
		if string(jsonMessageComponentInputTextResponse) == "{}" { // empty struct
			dst.MessageComponentInputTextResponse = nil
		} else {
			if err = validator.Validate(dst.MessageComponentInputTextResponse); err != nil {
				dst.MessageComponentInputTextResponse = nil
			} else {
				match++
			}
		}
	} else {
		dst.MessageComponentInputTextResponse = nil
	}

	// try to unmarshal data into MessageComponentMentionableSelectResponse
	err = newStrictDecoder(data).Decode(&dst.MessageComponentMentionableSelectResponse)
	if err == nil {
		jsonMessageComponentMentionableSelectResponse, _ := json.Marshal(dst.MessageComponentMentionableSelectResponse)
		if string(jsonMessageComponentMentionableSelectResponse) == "{}" { // empty struct
			dst.MessageComponentMentionableSelectResponse = nil
		} else {
			if err = validator.Validate(dst.MessageComponentMentionableSelectResponse); err != nil {
				dst.MessageComponentMentionableSelectResponse = nil
			} else {
				match++
			}
		}
	} else {
		dst.MessageComponentMentionableSelectResponse = nil
	}

	// try to unmarshal data into MessageComponentRoleSelectResponse
	err = newStrictDecoder(data).Decode(&dst.MessageComponentRoleSelectResponse)
	if err == nil {
		jsonMessageComponentRoleSelectResponse, _ := json.Marshal(dst.MessageComponentRoleSelectResponse)
		if string(jsonMessageComponentRoleSelectResponse) == "{}" { // empty struct
			dst.MessageComponentRoleSelectResponse = nil
		} else {
			if err = validator.Validate(dst.MessageComponentRoleSelectResponse); err != nil {
				dst.MessageComponentRoleSelectResponse = nil
			} else {
				match++
			}
		}
	} else {
		dst.MessageComponentRoleSelectResponse = nil
	}

	// try to unmarshal data into MessageComponentStringSelectResponse
	err = newStrictDecoder(data).Decode(&dst.MessageComponentStringSelectResponse)
	if err == nil {
		jsonMessageComponentStringSelectResponse, _ := json.Marshal(dst.MessageComponentStringSelectResponse)
		if string(jsonMessageComponentStringSelectResponse) == "{}" { // empty struct
			dst.MessageComponentStringSelectResponse = nil
		} else {
			if err = validator.Validate(dst.MessageComponentStringSelectResponse); err != nil {
				dst.MessageComponentStringSelectResponse = nil
			} else {
				match++
			}
		}
	} else {
		dst.MessageComponentStringSelectResponse = nil
	}

	// try to unmarshal data into MessageComponentUserSelectResponse
	err = newStrictDecoder(data).Decode(&dst.MessageComponentUserSelectResponse)
	if err == nil {
		jsonMessageComponentUserSelectResponse, _ := json.Marshal(dst.MessageComponentUserSelectResponse)
		if string(jsonMessageComponentUserSelectResponse) == "{}" { // empty struct
			dst.MessageComponentUserSelectResponse = nil
		} else {
			if err = validator.Validate(dst.MessageComponentUserSelectResponse); err != nil {
				dst.MessageComponentUserSelectResponse = nil
			} else {
				match++
			}
		}
	} else {
		dst.MessageComponentUserSelectResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.MessageComponentButtonResponse = nil
		dst.MessageComponentChannelSelectResponse = nil
		dst.MessageComponentInputTextResponse = nil
		dst.MessageComponentMentionableSelectResponse = nil
		dst.MessageComponentRoleSelectResponse = nil
		dst.MessageComponentStringSelectResponse = nil
		dst.MessageComponentUserSelectResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(MessageComponentActionRowResponseComponentsInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(MessageComponentActionRowResponseComponentsInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src MessageComponentActionRowResponseComponentsInner) MarshalJSON() ([]byte, error) {
	if src.MessageComponentButtonResponse != nil {
		return json.Marshal(&src.MessageComponentButtonResponse)
	}

	if src.MessageComponentChannelSelectResponse != nil {
		return json.Marshal(&src.MessageComponentChannelSelectResponse)
	}

	if src.MessageComponentInputTextResponse != nil {
		return json.Marshal(&src.MessageComponentInputTextResponse)
	}

	if src.MessageComponentMentionableSelectResponse != nil {
		return json.Marshal(&src.MessageComponentMentionableSelectResponse)
	}

	if src.MessageComponentRoleSelectResponse != nil {
		return json.Marshal(&src.MessageComponentRoleSelectResponse)
	}

	if src.MessageComponentStringSelectResponse != nil {
		return json.Marshal(&src.MessageComponentStringSelectResponse)
	}

	if src.MessageComponentUserSelectResponse != nil {
		return json.Marshal(&src.MessageComponentUserSelectResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *MessageComponentActionRowResponseComponentsInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.MessageComponentButtonResponse != nil {
		return obj.MessageComponentButtonResponse
	}

	if obj.MessageComponentChannelSelectResponse != nil {
		return obj.MessageComponentChannelSelectResponse
	}

	if obj.MessageComponentInputTextResponse != nil {
		return obj.MessageComponentInputTextResponse
	}

	if obj.MessageComponentMentionableSelectResponse != nil {
		return obj.MessageComponentMentionableSelectResponse
	}

	if obj.MessageComponentRoleSelectResponse != nil {
		return obj.MessageComponentRoleSelectResponse
	}

	if obj.MessageComponentStringSelectResponse != nil {
		return obj.MessageComponentStringSelectResponse
	}

	if obj.MessageComponentUserSelectResponse != nil {
		return obj.MessageComponentUserSelectResponse
	}

	// all schemas are nil
	return nil
}

type NullableMessageComponentActionRowResponseComponentsInner struct {
	value *MessageComponentActionRowResponseComponentsInner
	isSet bool
}

func (v NullableMessageComponentActionRowResponseComponentsInner) Get() *MessageComponentActionRowResponseComponentsInner {
	return v.value
}

func (v *NullableMessageComponentActionRowResponseComponentsInner) Set(val *MessageComponentActionRowResponseComponentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageComponentActionRowResponseComponentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageComponentActionRowResponseComponentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageComponentActionRowResponseComponentsInner(val *MessageComponentActionRowResponseComponentsInner) *NullableMessageComponentActionRowResponseComponentsInner {
	return &NullableMessageComponentActionRowResponseComponentsInner{value: val, isSet: true}
}

func (v NullableMessageComponentActionRowResponseComponentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageComponentActionRowResponseComponentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


