/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discord

import (
	"encoding/json"
)

// checks if the PollAnswerDetailsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PollAnswerDetailsResponse{}

// PollAnswerDetailsResponse struct for PollAnswerDetailsResponse
type PollAnswerDetailsResponse struct {
	Users []UserResponse `json:"users,omitempty"`
}

// NewPollAnswerDetailsResponse instantiates a new PollAnswerDetailsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPollAnswerDetailsResponse() *PollAnswerDetailsResponse {
	this := PollAnswerDetailsResponse{}
	return &this
}

// NewPollAnswerDetailsResponseWithDefaults instantiates a new PollAnswerDetailsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPollAnswerDetailsResponseWithDefaults() *PollAnswerDetailsResponse {
	this := PollAnswerDetailsResponse{}
	return &this
}

// GetUsers returns the Users field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PollAnswerDetailsResponse) GetUsers() []UserResponse {
	if o == nil {
		var ret []UserResponse
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PollAnswerDetailsResponse) GetUsersOk() ([]UserResponse, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *PollAnswerDetailsResponse) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []UserResponse and assigns it to the Users field.
func (o *PollAnswerDetailsResponse) SetUsers(v []UserResponse) {
	o.Users = v
}

func (o PollAnswerDetailsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PollAnswerDetailsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

type NullablePollAnswerDetailsResponse struct {
	value *PollAnswerDetailsResponse
	isSet bool
}

func (v NullablePollAnswerDetailsResponse) Get() *PollAnswerDetailsResponse {
	return v.value
}

func (v *NullablePollAnswerDetailsResponse) Set(val *PollAnswerDetailsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePollAnswerDetailsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePollAnswerDetailsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePollAnswerDetailsResponse(val *PollAnswerDetailsResponse) *NullablePollAnswerDetailsResponse {
	return &NullablePollAnswerDetailsResponse{value: val, isSet: true}
}

func (v NullablePollAnswerDetailsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePollAnswerDetailsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


