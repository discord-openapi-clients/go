/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discord

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PongInteractionCallbackRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PongInteractionCallbackRequest{}

// PongInteractionCallbackRequest struct for PongInteractionCallbackRequest
type PongInteractionCallbackRequest struct {
	Type InteractionCallbackTypes `json:"type"`
}

type _PongInteractionCallbackRequest PongInteractionCallbackRequest

// NewPongInteractionCallbackRequest instantiates a new PongInteractionCallbackRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPongInteractionCallbackRequest(type_ InteractionCallbackTypes) *PongInteractionCallbackRequest {
	this := PongInteractionCallbackRequest{}
	this.Type = type_
	return &this
}

// NewPongInteractionCallbackRequestWithDefaults instantiates a new PongInteractionCallbackRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPongInteractionCallbackRequestWithDefaults() *PongInteractionCallbackRequest {
	this := PongInteractionCallbackRequest{}
	return &this
}

// GetType returns the Type field value
func (o *PongInteractionCallbackRequest) GetType() InteractionCallbackTypes {
	if o == nil {
		var ret InteractionCallbackTypes
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PongInteractionCallbackRequest) GetTypeOk() (*InteractionCallbackTypes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PongInteractionCallbackRequest) SetType(v InteractionCallbackTypes) {
	o.Type = v
}

func (o PongInteractionCallbackRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PongInteractionCallbackRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *PongInteractionCallbackRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPongInteractionCallbackRequest := _PongInteractionCallbackRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPongInteractionCallbackRequest)

	if err != nil {
		return err
	}

	*o = PongInteractionCallbackRequest(varPongInteractionCallbackRequest)

	return err
}

type NullablePongInteractionCallbackRequest struct {
	value *PongInteractionCallbackRequest
	isSet bool
}

func (v NullablePongInteractionCallbackRequest) Get() *PongInteractionCallbackRequest {
	return v.value
}

func (v *NullablePongInteractionCallbackRequest) Set(val *PongInteractionCallbackRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePongInteractionCallbackRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePongInteractionCallbackRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePongInteractionCallbackRequest(val *PongInteractionCallbackRequest) *NullablePongInteractionCallbackRequest {
	return &NullablePongInteractionCallbackRequest{value: val, isSet: true}
}

func (v NullablePongInteractionCallbackRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePongInteractionCallbackRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


