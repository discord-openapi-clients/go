/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DefaultKeywordListTriggerMetadataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefaultKeywordListTriggerMetadataResponse{}

// DefaultKeywordListTriggerMetadataResponse struct for DefaultKeywordListTriggerMetadataResponse
type DefaultKeywordListTriggerMetadataResponse struct {
	AllowList []string `json:"allow_list"`
	Presets []AutomodKeywordPresetType `json:"presets"`
}

type _DefaultKeywordListTriggerMetadataResponse DefaultKeywordListTriggerMetadataResponse

// NewDefaultKeywordListTriggerMetadataResponse instantiates a new DefaultKeywordListTriggerMetadataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefaultKeywordListTriggerMetadataResponse(allowList []string, presets []AutomodKeywordPresetType) *DefaultKeywordListTriggerMetadataResponse {
	this := DefaultKeywordListTriggerMetadataResponse{}
	this.AllowList = allowList
	this.Presets = presets
	return &this
}

// NewDefaultKeywordListTriggerMetadataResponseWithDefaults instantiates a new DefaultKeywordListTriggerMetadataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefaultKeywordListTriggerMetadataResponseWithDefaults() *DefaultKeywordListTriggerMetadataResponse {
	this := DefaultKeywordListTriggerMetadataResponse{}
	return &this
}

// GetAllowList returns the AllowList field value
func (o *DefaultKeywordListTriggerMetadataResponse) GetAllowList() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AllowList
}

// GetAllowListOk returns a tuple with the AllowList field value
// and a boolean to check if the value has been set.
func (o *DefaultKeywordListTriggerMetadataResponse) GetAllowListOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowList, true
}

// SetAllowList sets field value
func (o *DefaultKeywordListTriggerMetadataResponse) SetAllowList(v []string) {
	o.AllowList = v
}

// GetPresets returns the Presets field value
func (o *DefaultKeywordListTriggerMetadataResponse) GetPresets() []AutomodKeywordPresetType {
	if o == nil {
		var ret []AutomodKeywordPresetType
		return ret
	}

	return o.Presets
}

// GetPresetsOk returns a tuple with the Presets field value
// and a boolean to check if the value has been set.
func (o *DefaultKeywordListTriggerMetadataResponse) GetPresetsOk() ([]AutomodKeywordPresetType, bool) {
	if o == nil {
		return nil, false
	}
	return o.Presets, true
}

// SetPresets sets field value
func (o *DefaultKeywordListTriggerMetadataResponse) SetPresets(v []AutomodKeywordPresetType) {
	o.Presets = v
}

func (o DefaultKeywordListTriggerMetadataResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefaultKeywordListTriggerMetadataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allow_list"] = o.AllowList
	toSerialize["presets"] = o.Presets
	return toSerialize, nil
}

func (o *DefaultKeywordListTriggerMetadataResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"allow_list",
		"presets",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDefaultKeywordListTriggerMetadataResponse := _DefaultKeywordListTriggerMetadataResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDefaultKeywordListTriggerMetadataResponse)

	if err != nil {
		return err
	}

	*o = DefaultKeywordListTriggerMetadataResponse(varDefaultKeywordListTriggerMetadataResponse)

	return err
}

type NullableDefaultKeywordListTriggerMetadataResponse struct {
	value *DefaultKeywordListTriggerMetadataResponse
	isSet bool
}

func (v NullableDefaultKeywordListTriggerMetadataResponse) Get() *DefaultKeywordListTriggerMetadataResponse {
	return v.value
}

func (v *NullableDefaultKeywordListTriggerMetadataResponse) Set(val *DefaultKeywordListTriggerMetadataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDefaultKeywordListTriggerMetadataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDefaultKeywordListTriggerMetadataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefaultKeywordListTriggerMetadataResponse(val *DefaultKeywordListTriggerMetadataResponse) *NullableDefaultKeywordListTriggerMetadataResponse {
	return &NullableDefaultKeywordListTriggerMetadataResponse{value: val, isSet: true}
}

func (v NullableDefaultKeywordListTriggerMetadataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefaultKeywordListTriggerMetadataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


