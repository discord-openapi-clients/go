/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discord

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// GuildHomeSettingsResponseResourceChannelsInner - struct for GuildHomeSettingsResponseResourceChannelsInner
type GuildHomeSettingsResponseResourceChannelsInner struct {
	ResourceChannelResponse *ResourceChannelResponse
}

// ResourceChannelResponseAsGuildHomeSettingsResponseResourceChannelsInner is a convenience function that returns ResourceChannelResponse wrapped in GuildHomeSettingsResponseResourceChannelsInner
func ResourceChannelResponseAsGuildHomeSettingsResponseResourceChannelsInner(v *ResourceChannelResponse) GuildHomeSettingsResponseResourceChannelsInner {
	return GuildHomeSettingsResponseResourceChannelsInner{
		ResourceChannelResponse: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *GuildHomeSettingsResponseResourceChannelsInner) UnmarshalJSON(data []byte) error {
	var err error
	// this object is nullable so check if the payload is null or empty string
	if string(data) == "" || string(data) == "{}" {
		return nil
	}

	match := 0
	// try to unmarshal data into ResourceChannelResponse
	err = newStrictDecoder(data).Decode(&dst.ResourceChannelResponse)
	if err == nil {
		jsonResourceChannelResponse, _ := json.Marshal(dst.ResourceChannelResponse)
		if string(jsonResourceChannelResponse) == "{}" { // empty struct
			dst.ResourceChannelResponse = nil
		} else {
			if err = validator.Validate(dst.ResourceChannelResponse); err != nil {
				dst.ResourceChannelResponse = nil
			} else {
				match++
			}
		}
	} else {
		dst.ResourceChannelResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ResourceChannelResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GuildHomeSettingsResponseResourceChannelsInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GuildHomeSettingsResponseResourceChannelsInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GuildHomeSettingsResponseResourceChannelsInner) MarshalJSON() ([]byte, error) {
	if src.ResourceChannelResponse != nil {
		return json.Marshal(&src.ResourceChannelResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GuildHomeSettingsResponseResourceChannelsInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ResourceChannelResponse != nil {
		return obj.ResourceChannelResponse
	}

	// all schemas are nil
	return nil
}

type NullableGuildHomeSettingsResponseResourceChannelsInner struct {
	value *GuildHomeSettingsResponseResourceChannelsInner
	isSet bool
}

func (v NullableGuildHomeSettingsResponseResourceChannelsInner) Get() *GuildHomeSettingsResponseResourceChannelsInner {
	return v.value
}

func (v *NullableGuildHomeSettingsResponseResourceChannelsInner) Set(val *GuildHomeSettingsResponseResourceChannelsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGuildHomeSettingsResponseResourceChannelsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGuildHomeSettingsResponseResourceChannelsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuildHomeSettingsResponseResourceChannelsInner(val *GuildHomeSettingsResponseResourceChannelsInner) *NullableGuildHomeSettingsResponseResourceChannelsInner {
	return &NullableGuildHomeSettingsResponseResourceChannelsInner{value: val, isSet: true}
}

func (v NullableGuildHomeSettingsResponseResourceChannelsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuildHomeSettingsResponseResourceChannelsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


