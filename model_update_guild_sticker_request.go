/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discord

import (
	"encoding/json"
)

// checks if the UpdateGuildStickerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateGuildStickerRequest{}

// UpdateGuildStickerRequest struct for UpdateGuildStickerRequest
type UpdateGuildStickerRequest struct {
	Name *string `json:"name,omitempty"`
	Tags *string `json:"tags,omitempty"`
	Description NullableString `json:"description,omitempty"`
}

// NewUpdateGuildStickerRequest instantiates a new UpdateGuildStickerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateGuildStickerRequest() *UpdateGuildStickerRequest {
	this := UpdateGuildStickerRequest{}
	return &this
}

// NewUpdateGuildStickerRequestWithDefaults instantiates a new UpdateGuildStickerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateGuildStickerRequestWithDefaults() *UpdateGuildStickerRequest {
	this := UpdateGuildStickerRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateGuildStickerRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGuildStickerRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateGuildStickerRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateGuildStickerRequest) SetName(v string) {
	o.Name = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *UpdateGuildStickerRequest) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGuildStickerRequest) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *UpdateGuildStickerRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *UpdateGuildStickerRequest) SetTags(v string) {
	o.Tags = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateGuildStickerRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateGuildStickerRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateGuildStickerRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *UpdateGuildStickerRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *UpdateGuildStickerRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *UpdateGuildStickerRequest) UnsetDescription() {
	o.Description.Unset()
}

func (o UpdateGuildStickerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateGuildStickerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	return toSerialize, nil
}

type NullableUpdateGuildStickerRequest struct {
	value *UpdateGuildStickerRequest
	isSet bool
}

func (v NullableUpdateGuildStickerRequest) Get() *UpdateGuildStickerRequest {
	return v.value
}

func (v *NullableUpdateGuildStickerRequest) Set(val *UpdateGuildStickerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateGuildStickerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateGuildStickerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateGuildStickerRequest(val *UpdateGuildStickerRequest) *NullableUpdateGuildStickerRequest {
	return &NullableUpdateGuildStickerRequest{value: val, isSet: true}
}

func (v NullableUpdateGuildStickerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateGuildStickerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


