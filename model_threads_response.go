/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discord

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ThreadsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThreadsResponse{}

// ThreadsResponse struct for ThreadsResponse
type ThreadsResponse struct {
	Threads []ThreadResponse `json:"threads"`
	Members []ThreadMemberResponse `json:"members"`
	HasMore NullableBool `json:"has_more,omitempty"`
}

type _ThreadsResponse ThreadsResponse

// NewThreadsResponse instantiates a new ThreadsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreadsResponse(threads []ThreadResponse, members []ThreadMemberResponse) *ThreadsResponse {
	this := ThreadsResponse{}
	this.Threads = threads
	this.Members = members
	return &this
}

// NewThreadsResponseWithDefaults instantiates a new ThreadsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreadsResponseWithDefaults() *ThreadsResponse {
	this := ThreadsResponse{}
	return &this
}

// GetThreads returns the Threads field value
func (o *ThreadsResponse) GetThreads() []ThreadResponse {
	if o == nil {
		var ret []ThreadResponse
		return ret
	}

	return o.Threads
}

// GetThreadsOk returns a tuple with the Threads field value
// and a boolean to check if the value has been set.
func (o *ThreadsResponse) GetThreadsOk() ([]ThreadResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Threads, true
}

// SetThreads sets field value
func (o *ThreadsResponse) SetThreads(v []ThreadResponse) {
	o.Threads = v
}

// GetMembers returns the Members field value
func (o *ThreadsResponse) GetMembers() []ThreadMemberResponse {
	if o == nil {
		var ret []ThreadMemberResponse
		return ret
	}

	return o.Members
}

// GetMembersOk returns a tuple with the Members field value
// and a boolean to check if the value has been set.
func (o *ThreadsResponse) GetMembersOk() ([]ThreadMemberResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Members, true
}

// SetMembers sets field value
func (o *ThreadsResponse) SetMembers(v []ThreadMemberResponse) {
	o.Members = v
}

// GetHasMore returns the HasMore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ThreadsResponse) GetHasMore() bool {
	if o == nil || IsNil(o.HasMore.Get()) {
		var ret bool
		return ret
	}
	return *o.HasMore.Get()
}

// GetHasMoreOk returns a tuple with the HasMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ThreadsResponse) GetHasMoreOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasMore.Get(), o.HasMore.IsSet()
}

// HasHasMore returns a boolean if a field has been set.
func (o *ThreadsResponse) HasHasMore() bool {
	if o != nil && o.HasMore.IsSet() {
		return true
	}

	return false
}

// SetHasMore gets a reference to the given NullableBool and assigns it to the HasMore field.
func (o *ThreadsResponse) SetHasMore(v bool) {
	o.HasMore.Set(&v)
}
// SetHasMoreNil sets the value for HasMore to be an explicit nil
func (o *ThreadsResponse) SetHasMoreNil() {
	o.HasMore.Set(nil)
}

// UnsetHasMore ensures that no value is present for HasMore, not even an explicit nil
func (o *ThreadsResponse) UnsetHasMore() {
	o.HasMore.Unset()
}

func (o ThreadsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThreadsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["threads"] = o.Threads
	toSerialize["members"] = o.Members
	if o.HasMore.IsSet() {
		toSerialize["has_more"] = o.HasMore.Get()
	}
	return toSerialize, nil
}

func (o *ThreadsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"threads",
		"members",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varThreadsResponse := _ThreadsResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varThreadsResponse)

	if err != nil {
		return err
	}

	*o = ThreadsResponse(varThreadsResponse)

	return err
}

type NullableThreadsResponse struct {
	value *ThreadsResponse
	isSet bool
}

func (v NullableThreadsResponse) Get() *ThreadsResponse {
	return v.value
}

func (v *NullableThreadsResponse) Set(val *ThreadsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableThreadsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableThreadsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreadsResponse(val *ThreadsResponse) *NullableThreadsResponse {
	return &NullableThreadsResponse{value: val, isSet: true}
}

func (v NullableThreadsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreadsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


