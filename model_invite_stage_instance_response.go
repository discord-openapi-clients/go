/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InviteStageInstanceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InviteStageInstanceResponse{}

// InviteStageInstanceResponse struct for InviteStageInstanceResponse
type InviteStageInstanceResponse struct {
	Topic string `json:"topic"`
	ParticipantCount NullableInt32 `json:"participant_count,omitempty"`
	SpeakerCount NullableInt32 `json:"speaker_count,omitempty"`
	Members []GuildMemberResponse `json:"members,omitempty"`
}

type _InviteStageInstanceResponse InviteStageInstanceResponse

// NewInviteStageInstanceResponse instantiates a new InviteStageInstanceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInviteStageInstanceResponse(topic string) *InviteStageInstanceResponse {
	this := InviteStageInstanceResponse{}
	this.Topic = topic
	return &this
}

// NewInviteStageInstanceResponseWithDefaults instantiates a new InviteStageInstanceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInviteStageInstanceResponseWithDefaults() *InviteStageInstanceResponse {
	this := InviteStageInstanceResponse{}
	return &this
}

// GetTopic returns the Topic field value
func (o *InviteStageInstanceResponse) GetTopic() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Topic
}

// GetTopicOk returns a tuple with the Topic field value
// and a boolean to check if the value has been set.
func (o *InviteStageInstanceResponse) GetTopicOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Topic, true
}

// SetTopic sets field value
func (o *InviteStageInstanceResponse) SetTopic(v string) {
	o.Topic = v
}

// GetParticipantCount returns the ParticipantCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InviteStageInstanceResponse) GetParticipantCount() int32 {
	if o == nil || IsNil(o.ParticipantCount.Get()) {
		var ret int32
		return ret
	}
	return *o.ParticipantCount.Get()
}

// GetParticipantCountOk returns a tuple with the ParticipantCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InviteStageInstanceResponse) GetParticipantCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParticipantCount.Get(), o.ParticipantCount.IsSet()
}

// HasParticipantCount returns a boolean if a field has been set.
func (o *InviteStageInstanceResponse) HasParticipantCount() bool {
	if o != nil && o.ParticipantCount.IsSet() {
		return true
	}

	return false
}

// SetParticipantCount gets a reference to the given NullableInt32 and assigns it to the ParticipantCount field.
func (o *InviteStageInstanceResponse) SetParticipantCount(v int32) {
	o.ParticipantCount.Set(&v)
}
// SetParticipantCountNil sets the value for ParticipantCount to be an explicit nil
func (o *InviteStageInstanceResponse) SetParticipantCountNil() {
	o.ParticipantCount.Set(nil)
}

// UnsetParticipantCount ensures that no value is present for ParticipantCount, not even an explicit nil
func (o *InviteStageInstanceResponse) UnsetParticipantCount() {
	o.ParticipantCount.Unset()
}

// GetSpeakerCount returns the SpeakerCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InviteStageInstanceResponse) GetSpeakerCount() int32 {
	if o == nil || IsNil(o.SpeakerCount.Get()) {
		var ret int32
		return ret
	}
	return *o.SpeakerCount.Get()
}

// GetSpeakerCountOk returns a tuple with the SpeakerCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InviteStageInstanceResponse) GetSpeakerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpeakerCount.Get(), o.SpeakerCount.IsSet()
}

// HasSpeakerCount returns a boolean if a field has been set.
func (o *InviteStageInstanceResponse) HasSpeakerCount() bool {
	if o != nil && o.SpeakerCount.IsSet() {
		return true
	}

	return false
}

// SetSpeakerCount gets a reference to the given NullableInt32 and assigns it to the SpeakerCount field.
func (o *InviteStageInstanceResponse) SetSpeakerCount(v int32) {
	o.SpeakerCount.Set(&v)
}
// SetSpeakerCountNil sets the value for SpeakerCount to be an explicit nil
func (o *InviteStageInstanceResponse) SetSpeakerCountNil() {
	o.SpeakerCount.Set(nil)
}

// UnsetSpeakerCount ensures that no value is present for SpeakerCount, not even an explicit nil
func (o *InviteStageInstanceResponse) UnsetSpeakerCount() {
	o.SpeakerCount.Unset()
}

// GetMembers returns the Members field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InviteStageInstanceResponse) GetMembers() []GuildMemberResponse {
	if o == nil {
		var ret []GuildMemberResponse
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InviteStageInstanceResponse) GetMembersOk() ([]GuildMemberResponse, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *InviteStageInstanceResponse) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []GuildMemberResponse and assigns it to the Members field.
func (o *InviteStageInstanceResponse) SetMembers(v []GuildMemberResponse) {
	o.Members = v
}

func (o InviteStageInstanceResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InviteStageInstanceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["topic"] = o.Topic
	if o.ParticipantCount.IsSet() {
		toSerialize["participant_count"] = o.ParticipantCount.Get()
	}
	if o.SpeakerCount.IsSet() {
		toSerialize["speaker_count"] = o.SpeakerCount.Get()
	}
	if o.Members != nil {
		toSerialize["members"] = o.Members
	}
	return toSerialize, nil
}

func (o *InviteStageInstanceResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"topic",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInviteStageInstanceResponse := _InviteStageInstanceResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInviteStageInstanceResponse)

	if err != nil {
		return err
	}

	*o = InviteStageInstanceResponse(varInviteStageInstanceResponse)

	return err
}

type NullableInviteStageInstanceResponse struct {
	value *InviteStageInstanceResponse
	isSet bool
}

func (v NullableInviteStageInstanceResponse) Get() *InviteStageInstanceResponse {
	return v.value
}

func (v *NullableInviteStageInstanceResponse) Set(val *InviteStageInstanceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInviteStageInstanceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInviteStageInstanceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInviteStageInstanceResponse(val *InviteStageInstanceResponse) *NullableInviteStageInstanceResponse {
	return &NullableInviteStageInstanceResponse{value: val, isSet: true}
}

func (v NullableInviteStageInstanceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInviteStageInstanceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


