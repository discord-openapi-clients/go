/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discord

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApplicationRoleConnectionsMetadataItemResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationRoleConnectionsMetadataItemResponse{}

// ApplicationRoleConnectionsMetadataItemResponse struct for ApplicationRoleConnectionsMetadataItemResponse
type ApplicationRoleConnectionsMetadataItemResponse struct {
	Type MetadataItemTypes `json:"type"`
	Key string `json:"key"`
	Name string `json:"name"`
	NameLocalizations map[string]string `json:"name_localizations,omitempty"`
	Description string `json:"description"`
	DescriptionLocalizations map[string]string `json:"description_localizations,omitempty"`
}

type _ApplicationRoleConnectionsMetadataItemResponse ApplicationRoleConnectionsMetadataItemResponse

// NewApplicationRoleConnectionsMetadataItemResponse instantiates a new ApplicationRoleConnectionsMetadataItemResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationRoleConnectionsMetadataItemResponse(type_ MetadataItemTypes, key string, name string, description string) *ApplicationRoleConnectionsMetadataItemResponse {
	this := ApplicationRoleConnectionsMetadataItemResponse{}
	this.Type = type_
	this.Key = key
	this.Name = name
	this.Description = description
	return &this
}

// NewApplicationRoleConnectionsMetadataItemResponseWithDefaults instantiates a new ApplicationRoleConnectionsMetadataItemResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationRoleConnectionsMetadataItemResponseWithDefaults() *ApplicationRoleConnectionsMetadataItemResponse {
	this := ApplicationRoleConnectionsMetadataItemResponse{}
	return &this
}

// GetType returns the Type field value
func (o *ApplicationRoleConnectionsMetadataItemResponse) GetType() MetadataItemTypes {
	if o == nil {
		var ret MetadataItemTypes
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApplicationRoleConnectionsMetadataItemResponse) GetTypeOk() (*MetadataItemTypes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApplicationRoleConnectionsMetadataItemResponse) SetType(v MetadataItemTypes) {
	o.Type = v
}

// GetKey returns the Key field value
func (o *ApplicationRoleConnectionsMetadataItemResponse) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ApplicationRoleConnectionsMetadataItemResponse) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ApplicationRoleConnectionsMetadataItemResponse) SetKey(v string) {
	o.Key = v
}

// GetName returns the Name field value
func (o *ApplicationRoleConnectionsMetadataItemResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApplicationRoleConnectionsMetadataItemResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApplicationRoleConnectionsMetadataItemResponse) SetName(v string) {
	o.Name = v
}

// GetNameLocalizations returns the NameLocalizations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationRoleConnectionsMetadataItemResponse) GetNameLocalizations() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.NameLocalizations
}

// GetNameLocalizationsOk returns a tuple with the NameLocalizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationRoleConnectionsMetadataItemResponse) GetNameLocalizationsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.NameLocalizations) {
		return nil, false
	}
	return &o.NameLocalizations, true
}

// HasNameLocalizations returns a boolean if a field has been set.
func (o *ApplicationRoleConnectionsMetadataItemResponse) HasNameLocalizations() bool {
	if o != nil && !IsNil(o.NameLocalizations) {
		return true
	}

	return false
}

// SetNameLocalizations gets a reference to the given map[string]string and assigns it to the NameLocalizations field.
func (o *ApplicationRoleConnectionsMetadataItemResponse) SetNameLocalizations(v map[string]string) {
	o.NameLocalizations = v
}

// GetDescription returns the Description field value
func (o *ApplicationRoleConnectionsMetadataItemResponse) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ApplicationRoleConnectionsMetadataItemResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ApplicationRoleConnectionsMetadataItemResponse) SetDescription(v string) {
	o.Description = v
}

// GetDescriptionLocalizations returns the DescriptionLocalizations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationRoleConnectionsMetadataItemResponse) GetDescriptionLocalizations() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.DescriptionLocalizations
}

// GetDescriptionLocalizationsOk returns a tuple with the DescriptionLocalizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationRoleConnectionsMetadataItemResponse) GetDescriptionLocalizationsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.DescriptionLocalizations) {
		return nil, false
	}
	return &o.DescriptionLocalizations, true
}

// HasDescriptionLocalizations returns a boolean if a field has been set.
func (o *ApplicationRoleConnectionsMetadataItemResponse) HasDescriptionLocalizations() bool {
	if o != nil && !IsNil(o.DescriptionLocalizations) {
		return true
	}

	return false
}

// SetDescriptionLocalizations gets a reference to the given map[string]string and assigns it to the DescriptionLocalizations field.
func (o *ApplicationRoleConnectionsMetadataItemResponse) SetDescriptionLocalizations(v map[string]string) {
	o.DescriptionLocalizations = v
}

func (o ApplicationRoleConnectionsMetadataItemResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationRoleConnectionsMetadataItemResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["key"] = o.Key
	toSerialize["name"] = o.Name
	if o.NameLocalizations != nil {
		toSerialize["name_localizations"] = o.NameLocalizations
	}
	toSerialize["description"] = o.Description
	if o.DescriptionLocalizations != nil {
		toSerialize["description_localizations"] = o.DescriptionLocalizations
	}
	return toSerialize, nil
}

func (o *ApplicationRoleConnectionsMetadataItemResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"key",
		"name",
		"description",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApplicationRoleConnectionsMetadataItemResponse := _ApplicationRoleConnectionsMetadataItemResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApplicationRoleConnectionsMetadataItemResponse)

	if err != nil {
		return err
	}

	*o = ApplicationRoleConnectionsMetadataItemResponse(varApplicationRoleConnectionsMetadataItemResponse)

	return err
}

type NullableApplicationRoleConnectionsMetadataItemResponse struct {
	value *ApplicationRoleConnectionsMetadataItemResponse
	isSet bool
}

func (v NullableApplicationRoleConnectionsMetadataItemResponse) Get() *ApplicationRoleConnectionsMetadataItemResponse {
	return v.value
}

func (v *NullableApplicationRoleConnectionsMetadataItemResponse) Set(val *ApplicationRoleConnectionsMetadataItemResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationRoleConnectionsMetadataItemResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationRoleConnectionsMetadataItemResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationRoleConnectionsMetadataItemResponse(val *ApplicationRoleConnectionsMetadataItemResponse) *NullableApplicationRoleConnectionsMetadataItemResponse {
	return &NullableApplicationRoleConnectionsMetadataItemResponse{value: val, isSet: true}
}

func (v NullableApplicationRoleConnectionsMetadataItemResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationRoleConnectionsMetadataItemResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


