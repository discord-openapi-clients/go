/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discord

import (
	"encoding/json"
)

// checks if the UpdateStageInstanceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateStageInstanceRequest{}

// UpdateStageInstanceRequest struct for UpdateStageInstanceRequest
type UpdateStageInstanceRequest struct {
	Topic *string `json:"topic,omitempty"`
	PrivacyLevel *StageInstancesPrivacyLevels `json:"privacy_level,omitempty"`
}

// NewUpdateStageInstanceRequest instantiates a new UpdateStageInstanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateStageInstanceRequest() *UpdateStageInstanceRequest {
	this := UpdateStageInstanceRequest{}
	return &this
}

// NewUpdateStageInstanceRequestWithDefaults instantiates a new UpdateStageInstanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateStageInstanceRequestWithDefaults() *UpdateStageInstanceRequest {
	this := UpdateStageInstanceRequest{}
	return &this
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *UpdateStageInstanceRequest) GetTopic() string {
	if o == nil || IsNil(o.Topic) {
		var ret string
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStageInstanceRequest) GetTopicOk() (*string, bool) {
	if o == nil || IsNil(o.Topic) {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *UpdateStageInstanceRequest) HasTopic() bool {
	if o != nil && !IsNil(o.Topic) {
		return true
	}

	return false
}

// SetTopic gets a reference to the given string and assigns it to the Topic field.
func (o *UpdateStageInstanceRequest) SetTopic(v string) {
	o.Topic = &v
}

// GetPrivacyLevel returns the PrivacyLevel field value if set, zero value otherwise.
func (o *UpdateStageInstanceRequest) GetPrivacyLevel() StageInstancesPrivacyLevels {
	if o == nil || IsNil(o.PrivacyLevel) {
		var ret StageInstancesPrivacyLevels
		return ret
	}
	return *o.PrivacyLevel
}

// GetPrivacyLevelOk returns a tuple with the PrivacyLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStageInstanceRequest) GetPrivacyLevelOk() (*StageInstancesPrivacyLevels, bool) {
	if o == nil || IsNil(o.PrivacyLevel) {
		return nil, false
	}
	return o.PrivacyLevel, true
}

// HasPrivacyLevel returns a boolean if a field has been set.
func (o *UpdateStageInstanceRequest) HasPrivacyLevel() bool {
	if o != nil && !IsNil(o.PrivacyLevel) {
		return true
	}

	return false
}

// SetPrivacyLevel gets a reference to the given StageInstancesPrivacyLevels and assigns it to the PrivacyLevel field.
func (o *UpdateStageInstanceRequest) SetPrivacyLevel(v StageInstancesPrivacyLevels) {
	o.PrivacyLevel = &v
}

func (o UpdateStageInstanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateStageInstanceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Topic) {
		toSerialize["topic"] = o.Topic
	}
	if !IsNil(o.PrivacyLevel) {
		toSerialize["privacy_level"] = o.PrivacyLevel
	}
	return toSerialize, nil
}

type NullableUpdateStageInstanceRequest struct {
	value *UpdateStageInstanceRequest
	isSet bool
}

func (v NullableUpdateStageInstanceRequest) Get() *UpdateStageInstanceRequest {
	return v.value
}

func (v *NullableUpdateStageInstanceRequest) Set(val *UpdateStageInstanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateStageInstanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateStageInstanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateStageInstanceRequest(val *UpdateStageInstanceRequest) *NullableUpdateStageInstanceRequest {
	return &NullableUpdateStageInstanceRequest{value: val, isSet: true}
}

func (v NullableUpdateStageInstanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateStageInstanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


