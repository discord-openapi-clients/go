/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModalInteractionCallbackData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModalInteractionCallbackData{}

// ModalInteractionCallbackData struct for ModalInteractionCallbackData
type ModalInteractionCallbackData struct {
	CustomId string `json:"custom_id"`
	Title string `json:"title"`
	Components []ActionRow `json:"components"`
}

type _ModalInteractionCallbackData ModalInteractionCallbackData

// NewModalInteractionCallbackData instantiates a new ModalInteractionCallbackData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModalInteractionCallbackData(customId string, title string, components []ActionRow) *ModalInteractionCallbackData {
	this := ModalInteractionCallbackData{}
	this.CustomId = customId
	this.Title = title
	this.Components = components
	return &this
}

// NewModalInteractionCallbackDataWithDefaults instantiates a new ModalInteractionCallbackData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModalInteractionCallbackDataWithDefaults() *ModalInteractionCallbackData {
	this := ModalInteractionCallbackData{}
	return &this
}

// GetCustomId returns the CustomId field value
func (o *ModalInteractionCallbackData) GetCustomId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomId
}

// GetCustomIdOk returns a tuple with the CustomId field value
// and a boolean to check if the value has been set.
func (o *ModalInteractionCallbackData) GetCustomIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomId, true
}

// SetCustomId sets field value
func (o *ModalInteractionCallbackData) SetCustomId(v string) {
	o.CustomId = v
}

// GetTitle returns the Title field value
func (o *ModalInteractionCallbackData) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ModalInteractionCallbackData) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ModalInteractionCallbackData) SetTitle(v string) {
	o.Title = v
}

// GetComponents returns the Components field value
func (o *ModalInteractionCallbackData) GetComponents() []ActionRow {
	if o == nil {
		var ret []ActionRow
		return ret
	}

	return o.Components
}

// GetComponentsOk returns a tuple with the Components field value
// and a boolean to check if the value has been set.
func (o *ModalInteractionCallbackData) GetComponentsOk() ([]ActionRow, bool) {
	if o == nil {
		return nil, false
	}
	return o.Components, true
}

// SetComponents sets field value
func (o *ModalInteractionCallbackData) SetComponents(v []ActionRow) {
	o.Components = v
}

func (o ModalInteractionCallbackData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModalInteractionCallbackData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["custom_id"] = o.CustomId
	toSerialize["title"] = o.Title
	toSerialize["components"] = o.Components
	return toSerialize, nil
}

func (o *ModalInteractionCallbackData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"custom_id",
		"title",
		"components",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModalInteractionCallbackData := _ModalInteractionCallbackData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModalInteractionCallbackData)

	if err != nil {
		return err
	}

	*o = ModalInteractionCallbackData(varModalInteractionCallbackData)

	return err
}

type NullableModalInteractionCallbackData struct {
	value *ModalInteractionCallbackData
	isSet bool
}

func (v NullableModalInteractionCallbackData) Get() *ModalInteractionCallbackData {
	return v.value
}

func (v *NullableModalInteractionCallbackData) Set(val *ModalInteractionCallbackData) {
	v.value = val
	v.isSet = true
}

func (v NullableModalInteractionCallbackData) IsSet() bool {
	return v.isSet
}

func (v *NullableModalInteractionCallbackData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModalInteractionCallbackData(val *ModalInteractionCallbackData) *NullableModalInteractionCallbackData {
	return &NullableModalInteractionCallbackData{value: val, isSet: true}
}

func (v NullableModalInteractionCallbackData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModalInteractionCallbackData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


