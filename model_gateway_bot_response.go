/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discord

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GatewayBotResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayBotResponse{}

// GatewayBotResponse struct for GatewayBotResponse
type GatewayBotResponse struct {
	Url string `json:"url"`
	SessionStartLimit GatewayBotSessionStartLimitResponse `json:"session_start_limit"`
	Shards int32 `json:"shards"`
}

type _GatewayBotResponse GatewayBotResponse

// NewGatewayBotResponse instantiates a new GatewayBotResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayBotResponse(url string, sessionStartLimit GatewayBotSessionStartLimitResponse, shards int32) *GatewayBotResponse {
	this := GatewayBotResponse{}
	this.Url = url
	this.SessionStartLimit = sessionStartLimit
	this.Shards = shards
	return &this
}

// NewGatewayBotResponseWithDefaults instantiates a new GatewayBotResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayBotResponseWithDefaults() *GatewayBotResponse {
	this := GatewayBotResponse{}
	return &this
}

// GetUrl returns the Url field value
func (o *GatewayBotResponse) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *GatewayBotResponse) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *GatewayBotResponse) SetUrl(v string) {
	o.Url = v
}

// GetSessionStartLimit returns the SessionStartLimit field value
func (o *GatewayBotResponse) GetSessionStartLimit() GatewayBotSessionStartLimitResponse {
	if o == nil {
		var ret GatewayBotSessionStartLimitResponse
		return ret
	}

	return o.SessionStartLimit
}

// GetSessionStartLimitOk returns a tuple with the SessionStartLimit field value
// and a boolean to check if the value has been set.
func (o *GatewayBotResponse) GetSessionStartLimitOk() (*GatewayBotSessionStartLimitResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionStartLimit, true
}

// SetSessionStartLimit sets field value
func (o *GatewayBotResponse) SetSessionStartLimit(v GatewayBotSessionStartLimitResponse) {
	o.SessionStartLimit = v
}

// GetShards returns the Shards field value
func (o *GatewayBotResponse) GetShards() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Shards
}

// GetShardsOk returns a tuple with the Shards field value
// and a boolean to check if the value has been set.
func (o *GatewayBotResponse) GetShardsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Shards, true
}

// SetShards sets field value
func (o *GatewayBotResponse) SetShards(v int32) {
	o.Shards = v
}

func (o GatewayBotResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayBotResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["session_start_limit"] = o.SessionStartLimit
	toSerialize["shards"] = o.Shards
	return toSerialize, nil
}

func (o *GatewayBotResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
		"session_start_limit",
		"shards",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGatewayBotResponse := _GatewayBotResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGatewayBotResponse)

	if err != nil {
		return err
	}

	*o = GatewayBotResponse(varGatewayBotResponse)

	return err
}

type NullableGatewayBotResponse struct {
	value *GatewayBotResponse
	isSet bool
}

func (v NullableGatewayBotResponse) Get() *GatewayBotResponse {
	return v.value
}

func (v *NullableGatewayBotResponse) Set(val *GatewayBotResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayBotResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayBotResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayBotResponse(val *GatewayBotResponse) *NullableGatewayBotResponse {
	return &NullableGatewayBotResponse{value: val, isSet: true}
}

func (v NullableGatewayBotResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayBotResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


