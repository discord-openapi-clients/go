/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discord

import (
	"encoding/json"
	"fmt"
)


// CreateThreadRequest struct for CreateThreadRequest
type CreateThreadRequest struct {
	CreateForumThreadRequest *CreateForumThreadRequest
	CreateTextThreadWithoutMessageRequest *CreateTextThreadWithoutMessageRequest
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *CreateThreadRequest) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into CreateForumThreadRequest
	err = json.Unmarshal(data, &dst.CreateForumThreadRequest);
	if err == nil {
		jsonCreateForumThreadRequest, _ := json.Marshal(dst.CreateForumThreadRequest)
		if string(jsonCreateForumThreadRequest) == "{}" { // empty struct
			dst.CreateForumThreadRequest = nil
		} else {
			return nil // data stored in dst.CreateForumThreadRequest, return on the first match
		}
	} else {
		dst.CreateForumThreadRequest = nil
	}

	// try to unmarshal JSON data into CreateTextThreadWithoutMessageRequest
	err = json.Unmarshal(data, &dst.CreateTextThreadWithoutMessageRequest);
	if err == nil {
		jsonCreateTextThreadWithoutMessageRequest, _ := json.Marshal(dst.CreateTextThreadWithoutMessageRequest)
		if string(jsonCreateTextThreadWithoutMessageRequest) == "{}" { // empty struct
			dst.CreateTextThreadWithoutMessageRequest = nil
		} else {
			return nil // data stored in dst.CreateTextThreadWithoutMessageRequest, return on the first match
		}
	} else {
		dst.CreateTextThreadWithoutMessageRequest = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(CreateThreadRequest)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *CreateThreadRequest) MarshalJSON() ([]byte, error) {
	if src.CreateForumThreadRequest != nil {
		return json.Marshal(&src.CreateForumThreadRequest)
	}

	if src.CreateTextThreadWithoutMessageRequest != nil {
		return json.Marshal(&src.CreateTextThreadWithoutMessageRequest)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableCreateThreadRequest struct {
	value *CreateThreadRequest
	isSet bool
}

func (v NullableCreateThreadRequest) Get() *CreateThreadRequest {
	return v.value
}

func (v *NullableCreateThreadRequest) Set(val *CreateThreadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateThreadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateThreadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateThreadRequest(val *CreateThreadRequest) *NullableCreateThreadRequest {
	return &NullableCreateThreadRequest{value: val, isSet: true}
}

func (v NullableCreateThreadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateThreadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


