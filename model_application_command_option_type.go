/*
Discord HTTP API (Preview)

Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.

API version: 10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discord

import (
	"encoding/json"
)

// checks if the ApplicationCommandOptionType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationCommandOptionType{}

// ApplicationCommandOptionType struct for ApplicationCommandOptionType
type ApplicationCommandOptionType struct {
}

// NewApplicationCommandOptionType instantiates a new ApplicationCommandOptionType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationCommandOptionType() *ApplicationCommandOptionType {
	this := ApplicationCommandOptionType{}
	return &this
}

// NewApplicationCommandOptionTypeWithDefaults instantiates a new ApplicationCommandOptionType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationCommandOptionTypeWithDefaults() *ApplicationCommandOptionType {
	this := ApplicationCommandOptionType{}
	return &this
}

func (o ApplicationCommandOptionType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationCommandOptionType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

type NullableApplicationCommandOptionType struct {
	value *ApplicationCommandOptionType
	isSet bool
}

func (v NullableApplicationCommandOptionType) Get() *ApplicationCommandOptionType {
	return v.value
}

func (v *NullableApplicationCommandOptionType) Set(val *ApplicationCommandOptionType) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationCommandOptionType) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationCommandOptionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationCommandOptionType(val *ApplicationCommandOptionType) *NullableApplicationCommandOptionType {
	return &NullableApplicationCommandOptionType{value: val, isSet: true}
}

func (v NullableApplicationCommandOptionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationCommandOptionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


